chisq.test(c(186,163,216,204))
Fitness.assay.pilot <- read.table("~/Google Drev/Arbejde/Drosophila/XY/Excel/Fitness assay pilot.xlsx", header=T, quote="\"")
View(Fitness.assay.pilot)
Fitness_assay_pilot <- read.csv("~/Google Drev/Arbejde/Drosophila/XY/Fitness_assay_pilot.csv", header=F)
View(Fitness_assay_pilot)
XYpilot$proportion_red<-XYpilot$total_red/(XYpilot$total_red+XYpilot$total_brown)
XYpilot<-read.table(file="fitness_assay_pilot.csv", header=T, sep=",")
Fitness_assay_pilot$proportion_red<-XYpilot$total_red/(XYpilot$total_red+XYpilot$total_brown)
Fitness_assay_pilot$proportion_red<-Fitness_assay_pilot$total_red/(Fitness_assay_pilot$total_red+Fitness_assay_pilot$total_brown)
Fitness_assay_pilot$proportion_red<-Fitness_assay_pilot$total_red/(Fitness_assay_pilot$total_red+Fitness_assay_pilot$total_brown)
sperm <- read.csv("~/Google Drev/Arbejde/Sperm/R/sperm data input.csv", header = TRUE, sep = ",", row.names = NULL)
sperm$Line <- factor(sperm$Line)
sperm$Yeast <- factor(sperm$Yeast)
sperm$Male <- factor(sperm$Male)
sperm$MaleNum <- factor(sperm$MaleNum)
sperm$Sperm <- factor(sperm$Sperm)
sperm$SpermNum <- factor(sperm$SpermNum)
fit1<-aov(Length_mm~Yeast*Line, data=sperm)
summary(fit1)
plotMeans(sperm$Length_mm, sperm$Yeast)
plotMeans(sperm$Length_mm, sperm$Line)
sperm <- read.csv("~/Google Drev/Arbejde/Sperm/R/sperm data input.csv", header = TRUE, sep = ",", row.names = NULL)
sperm$Line <- factor(sperm$Line)
sperm$Yeast <- factor(sperm$Yeast)
sperm$Male <- factor(sperm$Male)
sperm$MaleNum <- factor(sperm$MaleNum)
sperm$Sperm <- factor(sperm$Sperm)
sperm$SpermNum <- factor(sperm$SpermNum)
fit1<-aov(Length_mm~Yeast*Line, data=sperm)
summary(fit1)
library(Rcmdr)
library(Rcmdr)
plotMeans(sperm$Length_mm, sperm$Yeast)
plotMeans(sperm$Length_mm, sperm$Line)
TukeyHSD(fit1, "Yeast")
TukeyHSD(fit1, "Line")
interaction.plot(sperm$Yeast, sperm$Line, sperm$Length_mm)
library(lme4)
install.packages("lme4")
library(lme4)
model.H2 <- lmer(Length_mm~1+(1|Yeast)+(1|Line)+(1|Line:MaleNum), data=sperm)
sperm <- read.csv("~/Google Drev/Arbejde/Sperm/R/sperm data input.csv", header = TRUE, sep = ",", row.names = NULL)
View(sperm)
sperm$Line <- factor(sperm$Line)
sperm$Yeast <- factor(sperm$Yeast)
sperm$Male <- factor(sperm$Male)
sperm$MaleNum <- factor(sperm$MaleNum)
sperm$Sperm <- factor(sperm$Sperm)
sperm$SpermNum <- factor(sperm$SpermNum)
fit1<-aov(Length_mm~Yeast*Line, data=sperm)
library(Rcmdr)
plotMeans(sperm$Length_mm, sperm$Yeast)
plotMeans(sperm$Length_mm, sperm$Line)
TukeyHSD(fit1, "Yeast")
TukeyHSD(fit1, "Line")
interaction.plot(sperm$Yeast, sperm$Line, sperm$Length_mm,xlab="Yeast",xaxt="n", ylab="Sperm length (mm)",trace.label="Line")
axis(1,at=c(1,2,3),labels=c("40%","100%","160%"))
interaction.plot(sperm$Yeast, sperm$Line, sperm$Length_mm,xlab="Yeast",xaxt="n", ylab="Sperm length (mm)",trace.label="Line",fixed=TRUE)
axis(1,at=c(1,2,3),labels=c("40%","100%","160%"))
interaction.plot(sperm$Yeast, sperm$Line, sperm$Length_mm,xlab="Yeast",xaxt="n", ylab="Sperm length (mm)",trace.label="Line",fixed=TRUE,legend=FALSE)
axis(1,at=c(1,2,3),labels=c("40%","100%","160%"))
interaction.plot(sperm$Yeast, sperm$Line, sperm$Length_mm,xlab="Yeast",xaxt="n", ylab="Sperm length (mm)",trace.label="Line",fixed=TRUE,legend=FALSE)
axis(1,at=c(1,2,3),labels=c("40%","100%","160%"))
interaction.plot(sperm$Yeast, sperm$Line, sperm$Length_mm,xlab="Yeast",xaxt="n", ylab="Sperm length (mm)",trace.label="Line",fixed=TRUE,legend=TRUE)
interaction.plot(sperm$Yeast, sperm$Line, sperm$Length_mm,xlab="Yeast",xaxt="n", ylab="Sperm length (mm)",trace.label="Line",fixed=TRUE)
interaction.plot(sperm$Yeast, sperm$Line, sperm$Length_mm,xlab="Yeast",xaxt="n", ylab="Sperm length (mm)",trace.label="Line",fixed=TRUE,legend.position="bottom",legend.direction="horizontal")
opts(legend.position="bottom",legend.direction="horizontal")
axis(1,at=c(1,2,3),labels=c("40%","100%","160%"))
legend.position="bottom",legend.direction="horizontal")
legend.direction="horizontal")
legend.direction="horizontal"
legend.position="bottom"
interaction.plot(sperm$Yeast, sperm$Line, sperm$Length_mm,xlab="Yeast",xaxt="n", ylab="Sperm length (mm)",trace.label="Line",fixed=TRUE)
axis(1,at=c(1,2,3),labels=c("40%","100%","160%"))
legend.position="bottom"
legend.direction="horizontal"
interaction.plot(sperm$Yeast, sperm$Line, sperm$Length_mm,xlab="Yeast",xaxt="n", ylab="Sperm length (mm)",trace.label="Line",fixed=TRUE)
axis(1,at=c(1,2,3),labels=c("40%","100%","160%"))
+legend.position="bottom"
+legend.direction="horizontal"
interaction.plot(sperm$Yeast, sperm$Line, sperm$Length_mm,xlab="Yeast",xaxt="n", ylab="Sperm length (mm)",trace.label="Line",fixed=TRUE)
axis(1,at=c(1,2,3),labels=c("40%","100%","160%"))+
legend.position="bottom"+
legend.direction="horizontal"
library(lme4)
model.H2 <- lmer(Length_mm~1+(1|Yeast)+(1|Line)+(1|Line:MaleNum), data=sperm)
summary(model.H2)
model.H2<-lmer(Length_mm~1+(1|Yeast)+(1|Line)+(1|Line:MaleNum),data=sperm)
interaction.plot(sperm$Yeast, sperm$Line, sperm$Length_mm,xlab="Yeast",xaxt="n", ylab="Sperm length (mm)",trace.label="Line",fixed=TRUE)
axis(1,at=c(1,2,3),labels=c("40%","100%","160%"))
auto.key=list(space="right",points=FALSE, lines=TRUE)
auto.key=list(sperm$Line,space="right",points=FALSE, lines=TRUE)
simpleKey(sperm$Line,space="right",points=FALSE, lines=TRUE)
layout(rbind(1,2), heights=c(7,1))
col=c('black','black','blue'),ncol=3,bty ="n")
legend('center','groups',c("A","B","C"), lty = c(1,2,3),col=c('black','black','blue'),ncol=3,bty ="n")
legend('right','groups',c("A","B","C"), lty = c(1,2,3),col=c('black','black','blue'),ncol=3,bty ="n")
nteraction.plot(sperm$Yeast, sperm$Line, sperm$Length_mm,xlab="Yeast",xaxt="n", ylab="Sperm length (mm)",trace.label="Line",fixed=TRUE)
axis(1,at=c(1,2,3),labels=c("40%","100%","160%"))
interaction.plot(sperm$Yeast, sperm$Line, sperm$Length_mm,xlab="Yeast",xaxt="n", ylab="Sperm length (mm)",trace.label="Line",fixed=TRUE)
axis(1,at=c(1,2,3),labels=c("40%","100%","160%"))
sperm <- read.csv("~/Google Drev/Arbejde/Sperm/R/sperm data input.csv", header = TRUE, sep = ",", row.names = NULL)
sperm$Line <- factor(sperm$Line)
sperm$Yeast <- factor(sperm$Yeast)
sperm$Male <- factor(sperm$Male)
sperm$MaleNum <- factor(sperm$MaleNum)
sperm$Sperm <- factor(sperm$Sperm)
sperm$SpermNum <- factor(sperm$SpermNum)
library(Rcmdr)
plotMeans(sperm$Length_mm, sperm$Yeast)
plotMeans(sperm$Length_mm, sperm$Line)
TukeyHSD(fit1, "Yeast")
TukeyHSD(fit1, "Line")
interaction.plot(sperm$Yeast, sperm$Line, sperm$Length_mm,xlab="Yeast",xaxt="n", ylab="Sperm length (mm)",trace.label="Line",fixed=TRUE)
axis(1,at=c(1,2,3),labels=c("40%","100%","160%"))
library(org.Dm.eg.db)
library(org.Dm.eg.db)
z <- org.Dm.egCHR
source("http://bioconductor.org/biocLite.R")
biocLite("org.Dm.eg.db")
library(org.Dm.eg.db)
z <- org.Dm.egCHR
library(org.Dm.eg.db)
ls("package:org.Dm.eg.db")
source("http://bioconductor.org/biocLite.R")
?BiocUpgrade
source("http://bioconductor.org/biocLite.R")
biocLite("BiocUpgrade")
biocLite("org.Dm.eg.db")
library(org.Dm.eg.db)
biocLite("org.Dm.eg.db")
library(org.Dm.eg)
library(org.Dm.eg.db)
z <- org.Dm.egCHR
library(org.Dm.eg.db)
library("org.Dm.eg.db", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
z <- org.Dm.egCHR
library(BiocInstaller)
biocValid("org.Dm.eg.db")
?biocLite
?biocValid
?biocValid
library("org.Dm.eg.db", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
update.packages(checkBuilt=TRUE)
update.packages(checkBuilt=TRUE)
detach("package:org.Dm.eg.db", unload=TRUE)
library("org.Dm.eg.db", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
install.packages('org.Dm.eg.db')
library(org.Dm.eg.db)
library("org.Dm.eg.db", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
remove.packages("org.Dm.eg.db")
source("http://bioconductor.org/biocLite.R")
biocLite("BiocUpgrade")
biocLite("org.Dm.eg.db")
install.packages('org.Dm.eg.db')
library(org.Dm.eg.db)
z <- org.Dm.egCHR
chrloc <- as.data.frame(z[mapped_genes])
str(z)
chrloc <- as.data.frame(z[gene_id])
chrloc <- as.data.frame(z["gene_id"])
chrloc <- as.data.frame(z[genes])
chrloc <- as.data.frame(z[CHR])
source("http://bioconductor.org/biocLite.R")
biocLite("BiocUpgrade")
z<-org.Dm.egCHR
library(org.Dm.eg.db)
z<-org.Dm.egCHR
mapped_genes<-mappedkeys(z)
chrloc <- as.data.frame(z[mapped_genes])
dim(chrloc)
head(chrloc)
str(chrloc)
univ<-as.integer(chrloc$gene_id)
Plot(Happy birthday!)
1/1296
library(MASS)
fractions(0.0007716049)
install.packages("ABCp2")
library("ABCp2", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
15*250
3750/1000
3.75*100
15/250
0.06*100
0.05*100
0.5/10
0.05*1000
0.5/10
0.05*1000
50*1000
50/1000
0.1/250
250/0.1
60*2500
/1000
150000/1000
15250
15/250
60*100
6000/1000
140*100
14000/1000
200*0.1
50*200
10000/1000
10/200
10/200
0.05*100
10/20
0.5*1000
500/100
15/250
0.06*1000
60/100
0.6*1000
axis(1, at=seq(1,2, by=1)
labels=c("Female", "Male"))
250/0.1
0.1*2500
60*2500
150000/1000
150/250
0.6*1000
600/100
150/250
0.6*1000
0.6*100
600/100
15/250
0.06*1000
60/100
250/0.1
6*2500
15000/1000
140*100
14000/1000
20/0.1
50*200
10000/1000
140*1
150*50
7500/1000
50*10
500/1000
150/250
0.6*1000
600/100
0.5/10
0.05*1000
50/1000
0.5/10
0.05*1000
50/1000
0.05*1000
50*10
/1000
500/1000
0.5/10
0.05*1000
10*50
0.05*1
0.05*1000
0.05/1
0.05*1000
1000/1000
0.05*1000
50*1000
150/250
*
0.6*1000
0.05/1000
0.5/10
0.05*1000
50/1000
0.05*10
500.5
0.5/10
0.05*1000
50*1000
150*250
150/250
0.6*1000
600/100
50/1000
0.5/10
0.05*1000
50/1000
50/1000
0.05/10
0.005*1000
5*10
50/1000
0.05/10
0.005/1000
0.005/1000
0.005*1000
0.5/10
0.05*1000
50/1000
15/250
0.06*1000
60/100
150/250
0.6*1000
600/100
100/1000
250/0.1
0.1*25000
0.1*2500
60*2500
150000/1000
0.1*100
50*100
5000/5000
1/10
0.1*1000
5000/1000
50*10
500/10
500/1000
0.5/10
0.05/100
0.05/10
00.5
0.5/10
0.05*1000
50/1000
50*10
500/1000
0.5*10
0.5/10
0.05*1000
500*1000
500*100
15/250
*100
0.06*100
0.5*100
0.05*100
0.5/10
00000
0.05*1000
source("https://bioconductor.org/biocLite.R")
source("https://bioconductor.org/biocLite.R")
source("bioconductor.org/biocLite.R")
source("https://bioconductor.org/biocLite.R")
source("bioconductor.org/biocLite.R")
source("https://bioconductor.org/biocLite.R")
biocLite(QuasR)
biocLite("QuasR")
biocLite("GenomicFeatures")
biocLite("DESeq")
biocLite("edgeR")
biocLite("rtracklayer")
biocLite("GenomicRanges")
biocLite("Rsamtools")
biocLite("ShortRead")
YiL <- numeric(10000)
YtL <- numeric(10000)
YlI <- numeric(10000)
YoI <- numeric(10000)
YiO <- numeric(10000)
YdO <- numeric(10000)
YoD <- numeric(10000)
YtD <- numeric(10000)
YlT <- numeric(10000)
YdT <- numeric(10000)
M.P2.2 <- (c(0.7911482, 0.7908725, 0.8171189) * 100)
low.P2.2 <- (c(0.7622847, 0.7615254, 0.7923205) * 100)
up.P2.2 <- (c(0.818098, 0.8181186, 0.8406892) * 100)
plot(M.P2.2, ylab = "Percentage of offspring", xlab = "", xaxt = "n",
pch = 16, main = "Sperm Offence", las = 1,
ylim = c(70, 90), las = 1, cex = 2)
axis(1, at = seq(1, 3, by = 1),
labels = c("Wild type", "Novel X", "Novel Y"))
#Need Hmisc for the errbar functions
library("Hmisc")
x <- c(1:3)
errbar(x, M.P2.2, up.P2.2, low.P2.2, add = TRUE, lwd = 1.5)
?boxplot()
?boxplot
citation()
citation("pkgname")
citation("ABCp2")
?glm
M.P1 <- 100 - (c(0.8928301, 0.8778094, 0.9092379) * 100)
low.P1 <- 100 - (c(0.8569518, 0.8446161, 0.8821594) * 100)
up.P1 <- 100 - (c(0.9259682, 0.9127429, 0.9361223) * 100)
#Look at the numbers
M.P1
low.P1
up.P1
plot(M.P1, ylab = "Percentage of offspring", xlab = "",
pch = 16, las = 1, xaxt = "n",
ylim = c(6, 16), las = 1, cex = 2)
axis(1, at = seq(1, 3, by = 1),
labels = c("Wild type", "Novel X", "Novel Y"))
#Need Hmisc for the errbar functions
library("Hmisc")
x <- c(1:3)
errbar(x, M.P1, up.P1, low.P1, add = TRUE, lwd = 1.5)
M.P2 <- (c(0.7208732, 0.7508953, 0.7022149) * 100)
low.P2 <- (c(0.6912182, 0.7227621, 0.678571) * 100)
up.P2 <- (c(0.7504509, 0.7812094, 0.723788) * 100)
#Look at the numbers
M.P2
low.P2
up.P2
#plot
plot(M.P2, ylab = "Percentage of offspring", xlab = "",
pch = 16, las = 1, xaxt = "n",
ylim = c(65, 80), las = 1, cex = 2)
axis(1, at = seq(1, 3, by = 1),
labels = c("Wild type", "Novel X", "Novel Y"))
#Need Hmisc for the errbar functions
library("Hmisc")
x <- c(1:3)
errbar(x, M.P2, up.P2, low.P2, add = TRUE, lwd = 1.5)
M.P2.2 <- (c(0.7891523, 0.8120232, 0.8613151) * 100)
low.P2.2 <- (c(0.7258426, 0.7457064, 0.7958558) * 100)
up.P2.2 <- (c(0.8559286, 0.8823402, 0.9289464) * 100)
#Look at the numbers
M.P2.2
low.P2.2
up.P2.2
#plot
plot(M.P2.2, ylab = "Percentage of offspring", xlab = "",
pch = 16, las = 1, xaxt = "n",
ylim = c(70, 95), las = 1, cex = 2)
axis(1, at = seq(1, 3, by = 1),
labels = c("Wild type", "Novel X", "Novel Y"))
#Need Hmisc for the errbar functions
library("Hmisc")
x <- c(1:3)
errbar(x, M.P2.2, up.P2.2, low.P2.2, add = TRUE, lwd = 1.5)
binom.test(16, 20, p = 0.5)
binom.test(16, 20, p = 0)
binom.test(c(16, 4))
citation("survival")
install.packages(c("boot", "car", "cluster", "DBI", "digest", "ggplot2", "gridExtra", "gtable", "Hmisc", "latticeExtra", "lme4", "lmerTest", "Matrix", "mgcv", "multcomp", "munsell", "mvtnorm", "nnet", "pbkrtest", "plyr", "quantreg", "Rcpp", "RcppEigen", "RCurl", "scales", "stringi", "survival", "TH.data", "XML", "zoo"))
library("blmeco")
citation("blmeco")
citation("QuasR")
ftp hgdownload.cse.ucsc.ed
ftp hgdownload.cse.ucsc.edu
SFboth40.data <- read.table(file = "SFboth40.csv", h = T, sep = ",")
FLXhosf40 <- subset(SFboth40.data, genotype == "FLX" & hetero == "homo")
FLXhesf40 <- subset(SFboth40.data, genotype == "FLX" & hetero == "hetero")
FLXmsf40 <- subset(SFboth40.data, genotype == "FLX" & hetero == "hemi")
resmodel <- read.table("MR1.csv", h = T, sep = ",")
library(GenomicFeatures); library(biomaRt); library(goseq); library(GO.db); library(geneLenDataBase);
install.packages("GenomicFeatures")
install.packages("biomartr")
library(GenomicFeatures); library(biomaRt); library(goseq); library(GO.db); library(geneLenDataBase);
library(biomaRt)
library("biomartr", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
6/14
28796/28800
28800/28758
23576/28710
28710/28796
23576-28710
28710-23576
28796-28710
28800-28796
28758-28800
24847-28758
binom.test(16, 20, p = 0.5)
binom.test(16, 20, p = 0.5,  alternative = "two.sided")
